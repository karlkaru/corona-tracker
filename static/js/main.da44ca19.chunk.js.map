{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Cards","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterbottom","variant","start","end","duration","separator","Date","toDateString","App","state","fetchedData","setState","this","image","alt","src","coronaImage","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da44ca19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__UID1I\",\"card\":\"Cards_card__agtgq\",\"infected\":\"Cards_infected__nok1c\",\"recovered\":\"Cards_recovered__1Yhit\",\"deaths\":\"Cards_deaths__3qh-E\"};","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country) {\r\n       changeableUrl = `${url}/countries/${country}`; \r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n\r\n        }));\r\n    return modifiedData;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n      const { data: { countries } } = await axios.get(`${url}/countries`);\r\n  \r\n      return countries.map((country) => country.name);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    console.log(confirmed);\r\n    \r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterbottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0}end={confirmed.value}duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date (lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterbottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0}end={recovered.value}duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date (lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterbottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0}end={deaths.value}duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date (lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({ data:fetchedData });\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        \r\n        const fetchedData = await fetchData(country);\r\n\r\n        this.setState({ data: fetchedData, country: country });\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container} >\r\n                <img className={styles.image} alt=\"COVID-19\" src={coronaImage} />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__vSAg_\",\"image\":\"App_image__31FKz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3mPHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1Q39Q\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}